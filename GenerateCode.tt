<#@ template language="C#" #>
<#@ import namespace="Fiddler"#>
<#@ parameter type="System.String" name="scheme"  #>
<#@ parameter type="System.String" name="host"  #>
<#@ parameter type="System.String" name="uri"  #>
<#@ parameter type="System.String" name="httpmethod"  #>
<#@ parameter type="System.Collections.Generic.Dictionary<string,string>" name="headers" #>
<#@ parameter type="System.Collections.Generic.Dictionary<string,string>" name="bodies" #>
var uriBuilder = new UriBuilder("<# Write(scheme); #>","<# Write(host); #>",-1,"<# Write(uri); #>");
var httpClient = new HttpClient();
<#
if(httpmethod.ToUpper()=="GET")
{
#>
var httpRequestMessage = new HttpRequestMessage(HttpMethod.Get, uriBuilder.ToString());
<# 
} 
#>
<#
if(httpmethod.ToUpper()=="POST")
{
#>
var httpRequestMessage = new HttpRequestMessage(HttpMethod.Post, uriBuilder.ToString());
<# 
} 
#>
<#
foreach (var item in headers)
{
#>
httpRequestMessage.Headers.Add("<# Write(item.Key.ToString()); #>","<# Write(item.Value.ToString()); #>");
<#
}
#>
<#
if(bodies.Count > 0)
{
#>
var values = new Dictionary<string, string>();
<#
foreach (var item in bodies)
{
#>
values.Add("<# Write(item.Key.ToString()); #>","<# Write(item.Value.ToString()); #>");
<#
}
#>
var content = new FormUrlEncodedContent(values);
httpRequestMessage.Content = content;
<# 
}	
#>
var httpResponseMessage = httpClient.SendAsync(httpRequestMessage).Result;
var httpContent = httpResponseMessage.Content;
string result = httpResponseMessage.Content.ReadAsStringAsync().Result;
